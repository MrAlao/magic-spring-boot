<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--这个namespace的值是自己定义的-->
<mapper namespace="com.chloneda.dao.UserMapper">
    <!-- type指定的是对应的实体类 -->
    <resultMap id="UserResultMap" type="com.chloneda.domain.User">
        <!-- id用来配置表的主键与类的属性的映射关系 ,column指定的是表的字段名； property指定的是类的属性名-->
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="age" property="age"/>
        <result column="sex" property="sex"/>
        <result column="password" property="password"/>
        <result column="address" property="address"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
    </resultMap>

    <!-- 通过命名空间+id方式被定位 -->
    <select id="getUsersList" resultMap="UserResultMap">
        SELECT id, name, age, sex, password
	        , address, email, phone
        FROM user
    </select>

    <select id="getUser" resultMap="UserResultMap">
        SELECT u.id, u.name, u.age, u.sex, u.password
	        , u.address, u.email, u.phone
        FROM user u
        WHERE u.id = #{id}
    </select>

    <insert id="create" useGeneratedKeys="true" parameterType="com.chloneda.domain.User">
        INSERT INTO user(id,name,age,sex,password,address,email,phone)
          VALUES(#{id},#{name},#{age},#{sex},#{password},#{address},#{email},#{phone})
    </insert>

    <delete id="deleteUser" flushCache="true" parameterType="com.chloneda.domain.User">
        delete from user where id=#{id}
    </delete>

    <update id="updateUser" flushCache="true" parameterType="com.chloneda.domain.User">
        UPDATE
            user
        SET
            id = #{id},
            <if test="name != null">name = #{name},</if>
            <if test="age != null">age = #{age},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="password != null">password = #{password},</if>
            <if test="address != null">address = #{address},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone}</if>
        WHERE
        id =#{id}
    </update>

</mapper>